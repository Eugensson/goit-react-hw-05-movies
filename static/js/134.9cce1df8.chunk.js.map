{"version":3,"file":"static/js/134.9cce1df8.chunk.js","mappings":"qMAwDA,UAnDe,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBP,GAChBQ,KAAKV,GACLW,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,IAcJ,OACE,iCACE,2CACA,kBAAMa,SAfW,SAAAC,GACnBA,EAAEC,iBACFd,EAAgBC,EACjB,EAYG,WACE,kBACEc,KAAK,OACLC,MAAOf,EACPgB,YAAY,gBACZC,SAfkB,SAAAL,GACxB,GAAuB,KAAnBA,EAAEM,OAAOH,MACX,OAAOhB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOY,EAAEM,OAAOH,OACnC,KAYK,mBAAQD,KAAK,SAAb,uBAEDnB,EAAawB,OAAS,IACrB,wBACGxB,EAAayB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAChB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMvB,GAA1C,SACGoB,KAFID,EADO,QAW3B,C,qBCtDD,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBlB,EAAQmB,EAAKnB,KAInB,CAHE,MAAOP,GAEP,YADAqB,EAAOrB,EAET,CAEI0B,EAAKC,KACPP,EAAQb,GAERqB,QAAQR,QAAQb,GAAOT,KAAKwB,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMf,GACbW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQhB,EAClE,CAEA,SAASgB,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C,uJClCaC,EAAiB,6BAAG,sGACRC,MAAM,4FADE,cACzBC,EADyB,gBAIZA,EAASC,OAJG,cAIzBC,EAJyB,yBAKxBA,EAAKC,SALmB,2CAAH,qDAQjB9C,EAAkB,6BAAG,WAAML,GAAN,yFACT+C,MAAM,4FAAD,OACkE/C,IAF9D,cAC1BgD,EAD0B,gBAIbA,EAASC,OAJI,cAI1BC,EAJ0B,yBAKzBA,EAAKC,SALoB,2CAAH,sDAQlBC,EAAe,6BAAG,WAAM/B,GAAN,yFACN0B,MAAM,sCAAD,OACY1B,EADZ,8CADC,cACvB2B,EADuB,gBAIVA,EAASC,OAJC,cAIvBC,EAJuB,yBAKtBA,GALsB,2CAAH,sDAQfG,EAAe,6BAAG,WAAMhC,GAAN,yFACN0B,MAAM,sCAAD,OACY1B,EADZ,sDADC,cACvB2B,EADuB,gBAIVA,EAASC,OAJC,cAIvBC,EAJuB,yBAKtBA,EAAKI,MALiB,2CAAH,sDAQfC,EAAe,6BAAG,WAAMC,GAAN,yFACNT,MAAM,sCAAD,OACYS,EADZ,sDADC,cACvBR,EADuB,gBAIVA,EAASC,OAJC,cAIvBC,EAJuB,yBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { searchMovieByQuery } from '../services/api';\n\nconst Movies = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    searchMovieByQuery(searchParams)\n      .then(setSearchResult)\n      .catch(error => console.log(error));\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query);\n  };\n\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: e.target.value });\n  };\n\n  return (\n    <>\n      <h2>Search movies</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          placeholder=\"Search movies\"\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchResult.length > 0 && (\n        <ul>\n          {searchResult.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const getTrendingMovies = async () => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const searchMovieByQuery = async query => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=133c2d7094f741475ddc1c9cf006a400&query=${query}`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data.results;\n};\n"],"names":["useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","searchMovieByQuery","then","catch","error","console","log","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","length","map","id","title","to","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","getTrendingMovies","fetch","response","json","data","results","searchMovieById","getMovieCredits","cast","getMovieReviews","movieId"],"sourceRoot":""}