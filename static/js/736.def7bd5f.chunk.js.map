{"version":3,"file":"static/js/736.def7bd5f.chunk.js","mappings":"sPAEaA,EAAgBC,EAAAA,EAAAA,QAAH,0CAIbC,EAAYD,EAAAA,EAAAA,GAAH,2FAMTE,EAAWF,EAAAA,EAAAA,GAAH,4EAMRG,EAAeH,EAAAA,EAAAA,GAAH,kNAUZI,EAAWJ,EAAAA,EAAAA,EAAH,mE,SCoBrB,EAnCa,WACX,OAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,KAGF,UAACT,EAAD,YACE,SAACE,EAAD,oBACA,SAACC,EAAD,UACGI,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACT,UAAClB,EAAD,YACE,gBACEmB,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLK,MAAM,SAER,SAACpB,EAAD,WACE,uBAAIe,OAEN,UAACf,EAAD,yBAEE,uBAAIgB,SAXWF,EADV,QAmBlB,C,qBC9CD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CACImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOtB,KAAKiB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C,uJC7BaC,EAAiB,6BAAG,sGACRC,MAAM,4FADE,cACzBC,EADyB,gBAIZA,EAASC,OAJG,cAIzBC,EAJyB,yBAKxBA,EAAKC,SALmB,2CAAH,qDAQjBC,EAAmB,6BAAG,WAAMC,GAAN,yFACVN,MAAM,4FAAD,OACkEM,IAF7D,cAC3BL,EAD2B,gBAIdA,EAASC,OAJK,cAI3BC,EAJ2B,yBAK1BA,EAAKC,SALqB,2CAAH,sDAQnBG,EAAe,6BAAG,WAAMpC,GAAN,yFACN6B,MAAM,sCAAD,OACY7B,EADZ,8CADC,cACvB8B,EADuB,gBAIVA,EAASC,OAJC,cAIvBC,EAJuB,yBAKtBA,GALsB,2CAAH,sDAQfvC,EAAe,6BAAG,WAAMO,GAAN,yFACN6B,MAAM,sCAAD,OACY7B,EADZ,sDADC,cACvB8B,EADuB,gBAIVA,EAASC,OAJC,cAIvBC,EAJuB,yBAKtBA,EAAKK,MALiB,2CAAH,sDAQfC,EAAe,6BAAG,WAAMhD,GAAN,yFACNuC,MAAM,sCAAD,OACYvC,EADZ,sDADC,cACvBwC,EADuB,gBAIVA,EAASC,OAJC,cAIvBC,EAJuB,yBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastContainer = styled.section`\n  padding: 20px;\n`;\n\nexport const CastTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 30px;\n  text-align: center;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const CastListItem = styled.li`\n  width: calc((100% - 20px * 7) / 8);\n  background-color: #fff;\n  padding: 10px;\n  border: 1px solid;\n  border-radius: 4px;\n  box-shadow: 4px 2px 2px #999696;\n  list-style: none;\n`;\n\nexport const CastText = styled.p`\n  text-align: center;\n  font-size: 14px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from '../../services/api';\n\nimport {\n  CastContainer,\n  CastTitle,\n  CastList,\n  CastListItem,\n  CastText,\n} from 'components/Cast/Cast.styled';\n\nconst Cast = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(setMovie)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      <CastTitle>Cast</CastTitle>\n      <CastList>\n        {movie.map(({ id, name, character, profile_path }) => (\n          <CastListItem key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={name}\n              width=\"150\"\n            />\n            <CastText>\n              <b>{name}</b>\n            </CastText>\n            <CastText>\n              Character:\n              <b>{character}</b>\n            </CastText>\n          </CastListItem>\n        ))}\n      </CastList>\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const getTrendingMovies = async () => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const searchMoviesByQuery = async query => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=133c2d7094f741475ddc1c9cf006a400&query=${query}`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=133c2d7094f741475ddc1c9cf006a400`\n  );\n  const data = await response.json();\n  return data.results;\n};\n"],"names":["CastContainer","styled","CastTitle","CastList","CastListItem","CastText","useState","movie","setMovie","movieId","useParams","useEffect","getMovieCredits","then","catch","error","console","log","map","id","name","character","profile_path","src","alt","width","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","getTrendingMovies","fetch","response","json","data","results","searchMoviesByQuery","query","searchMovieById","cast","getMovieReviews"],"sourceRoot":""}